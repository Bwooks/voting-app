{"version":3,"sources":["../../src/core.js"],"names":["setEntries","next","vote","state","entries","set","get","concat","getWinners","newState","merge","take","skip","a","b","countA","getIn","countB","updateIn","value"],"mappings":";;;;;;ypBAAA;;;;;QAKgBA,U,GAAAA,U;QAIAC,I,GAAAA,I;QAkBAC,I,GAAAA,I;;AAxBhB;;AAEO,SAASF,UAAT,CAAoBG,KAApB,EAA0BC,OAA1B,EAAkC;AACrC,WAAOD,MAAME,GAAN,CAAU,SAAV,EAAoB,qBAAKD,OAAL,CAApB,CAAP;AACH;;AAEM,SAASH,IAAT,CAAcE,KAAd,EAAoB;AACvB,QAAMC,UAAUD,MAAMG,GAAN,CAAU,SAAV,EAAqBC,MAArB,CAA4BC,WAAWL,MAAMG,GAAN,CAAU,MAAV,CAAX,CAA5B,CAAhB;AACA,QAAIG,WAAWN,MAAMO,KAAN,CAAY;AACvB,gBAAO,oBAAI,EAAC,QAAON,QAAQO,IAAR,CAAa,CAAb,CAAR,EAAJ,CADgB;AAEvB,mBAAUP,QAAQQ,IAAR,CAAa,CAAb;AAFa,KAAZ,CAAf;AAIA,WAAOH,QAAP;AACH;;AAED,SAASD,UAAT,CAAoBN,IAApB,EAAyB;AACrB,QAAG,CAACA,IAAJ,EAAU,OAAO,EAAP;;AADW,oBAGPA,KAAKI,GAAL,CAAS,MAAT,CAHO;AAAA;AAAA,QAGdO,CAHc;AAAA,QAGZC,CAHY;;AAIrB,QAAMC,SAASb,KAAKc,KAAL,CAAW,CAAC,OAAD,EAASH,CAAT,CAAX,EAAuB,CAAvB,CAAf;AACA,QAAMI,SAASf,KAAKc,KAAL,CAAW,CAAC,OAAD,EAASF,CAAT,CAAX,EAAuB,CAAvB,CAAf;AACA,WAAOG,SAASF,MAAT,GAAkBD,CAAlB,GAAuBC,WAAWE,MAAX,GAAoB,CAACJ,CAAD,EAAGC,CAAH,CAApB,GAA4BD,CAA1D;AACH;;AAEM,SAASX,IAAT,CAAcC,KAAd,EAAoBD,IAApB,EAAyB;AAC5B,WAAOC,MAAMe,QAAN,CAAe,CAAC,MAAD,EAAQ,OAAR,EAAgBhB,IAAhB,CAAf,EAAqC,CAArC,EAAuC,UAACiB,KAAD;AAAA,eAASA,QAAM,CAAf;AAAA,KAAvC,CAAP;AACH","file":"core.js","sourcesContent":["/**\r\n * Created by Owner on 1/6/2017.\r\n */\r\nimport {List,Map} from 'immutable';\r\n\r\nexport function setEntries(state,entries){\r\n    return state.set(\"entries\",List(entries));\r\n}\r\n\r\nexport function next(state){\r\n    const entries = state.get(\"entries\").concat(getWinners(state.get(\"vote\")));\r\n    let newState = state.merge({\r\n        \"vote\":Map({\"pair\":entries.take(2)}),\r\n        \"entries\":entries.skip(2)\r\n    });\r\n    return newState;\r\n}\r\n\r\nfunction getWinners(vote){\r\n    if(!vote) return [];\r\n\r\n    const [a,b] = vote.get(\"pair\");\r\n    const countA = vote.getIn([\"tally\",a],0);\r\n    const countB = vote.getIn([\"tally\",b],0);\r\n    return countB > countA ? b : (countA === countB ? [a,b] : a);\r\n}\r\n\r\nexport function vote(state,vote){\r\n    return state.updateIn([\"vote\",\"tally\",vote],0,(value)=>value+1);\r\n}"]}